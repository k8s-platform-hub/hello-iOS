# Configuration for Hasura Auth service

customProviders: null
defaultProviders:
  email:
    defaultRoles: []
    enabled: "true"
  google:
    defaultRoles: []
    enabled: "false"
  mobile:
    defaultRoles: []
    enabled: "true"
  username:
    defaultRoles: []
    enabled: "true"
email:
  forgotPassEmailFrom: getstarteduser@hasura.io
  forgotPassEmailFromName: admin
  forgotPassEmailSubject: MyAwesomeApp - Reset password request
  forgotPassTemplate: |
    Hi, <br/> Click on
    http://auth.{{ cluster.name }}.hasura-app.io/v2/providers/email/reset-password?token={{ "{{token}}" }}to reset your password.
  resetTokenExpires: "7"
  verifEmailFromName: admin
  verifyEmailFrom: getstarteduser@hasura.io
  verifyEmailSubject: MyAwesomeApp - Verify your account
  verifyTemplate: "Hi, Please click on \nhttp://auth.{{ cluster.name }}.hasura-app.io/v2/providers/email/verify-email?token={{ "{{token}}" }}to\nverify
    your email.\n"
  verifyTokenExpires: "7"
google: null
mobile:
  otpExpiryTime: "15"
  smsTemplate: |
    Verify your acccount with MyAwesomeApp! Your OTP is {{ "{{otp}}" }}.
mobilePassword:
  otpExpiryTime: "15"
  smsTemplate: |
    Verify your acccount with MyAwesomeApp! Your OTP is {{ "{{otp}}" }}.
notifyDomain: http://notify.{{ cluster.metadata.namespaces.hasura }}
password:
  minLength: "8"
postgres:
  database: hasuradb
  host: postgres.{{ cluster.metadata.namespaces.hasura }}
  password:
    secretKeyRef:
      key: postgres.password
      name: hasura-secrets
  port: "5432"
  user:
    secretKeyRef:
      key: postgres.user
      name: hasura-secrets
redis:
  cred: null
  host: session-redis.{{ cluster.metadata.namespaces.hasura }}
  port: "6379"
session:
  cookieName: {{ cluster.name }}
  cookieSecure: "true"
  sessionAge: "1814400"
superUser:
  email: getstarteduser@hasura.io
  password:
    secretKeyRef:
      key: auth.admin.password
      name: hasura-secrets
  username: admin
